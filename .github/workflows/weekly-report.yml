name: Weekly Fantasy Football Report

on:
  schedule:
    # Run every Tuesday at 9:00 AM ET (13:00 UTC)
    # During daylight saving time (March-November), ET is UTC-4, so 9 AM ET = 13:00 UTC
    # During standard time (November-March), ET is UTC-5, so 9 AM ET = 14:00 UTC
    # Using 13:00 UTC as it covers most of the fantasy season (DST period)
    - cron: '0 13 * * 2'

  # Allow manual triggering for testing
  workflow_dispatch:

env:
  PYTHONUNBUFFERED: 1

jobs:
  generate-report:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Install dependencies
      run: uv sync

    - name: Create .env file from secrets
      run: |
        echo "LEAGUE_IDS=${{ secrets.LEAGUE_IDS }}" > .env
        if [ -n "${{ secrets.ESPN_SWID }}" ]; then
          echo "ESPN_SWID=${{ secrets.ESPN_SWID }}" >> .env
        fi
        if [ -n "${{ secrets.ESPN_S2 }}" ]; then
          echo "ESPN_S2=${{ secrets.ESPN_S2 }}" >> .env
        fi

    - name: Generate fantasy football report
      id: generate-report
      run: |
        # Determine if private leagues are needed
        if [ -n "${{ secrets.ESPN_SWID }}" ] && [ -n "${{ secrets.ESPN_S2 }}" ]; then
          PRIVATE_FLAG="--private"
        else
          PRIVATE_FLAG=""
        fi

        # Generate the report and save to file
        uv run ff-multi --env $PRIVATE_FLAG --sheets --output weekly-report.tsv

        # Also capture the console output for email body and extract current week
        uv run ff-multi --env $PRIVATE_FLAG > weekly-report.txt

        # Extract the current fantasy football week from the output
        CURRENT_WEEK=$(grep "CURRENT_WEEK=" weekly-report.txt | cut -d'=' -f2)
        echo "current_week=${CURRENT_WEEK}" >> $GITHUB_OUTPUT

        # Set outputs for the email step
        echo "report_generated=true" >> $GITHUB_OUTPUT

    # Read report content for email body
    - name: Generate mobile-friendly HTML email
      id: generate-html
      if: steps.generate-report.outputs.report_generated == 'true'
      run: |
        # Determine if private leagues are needed
        if [ -n "${{ secrets.ESPN_SWID }}" ] && [ -n "${{ secrets.ESPN_S2 }}" ]; then
          PRIVATE_FLAG="--private"
        else
          PRIVATE_FLAG=""
        fi

        # Generate mobile-friendly HTML email content
        uv run ff-multi --env $PRIVATE_FLAG --email-html > email_content.html

        # Read the generated HTML content
        {
          echo "html_content<<EOF"
          cat email_content.html
          echo "EOF"
        } >> $GITHUB_OUTPUT

    # Try second most popular email action to bypass obfuscation issues
    - name: Send email report
      if: steps.generate-report.outputs.report_generated == 'true'
      uses: hilarion5/send-mail@v1
      with:
        smtp-server: ${{ secrets.SMTP_SERVER }}
        smtp-port: ${{ secrets.SMTP_PORT || '2525' }}
        smtp-secure: ${{ secrets.SMTP_SECURE || 'false' }}
        from-email: ${{ secrets.EMAIL_FROM }}
        to-email: ${{ secrets.EMAIL_RECIPIENTS }}
        username: ${{ secrets.SMTP_USERNAME }}
        password: ${{ secrets.SMTP_PASSWORD }}
        subject: "Weekly Fantasy Football Report - Week ${{ steps.generate-report.outputs.current_week }}"
        html: ${{ steps.generate-html.outputs.html_content }}

    - name: Upload report artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: weekly-report-week-${{ steps.generate-report.outputs.current_week }}
        path: |
          weekly-report.txt
          weekly-report.tsv
        retention-days: 30